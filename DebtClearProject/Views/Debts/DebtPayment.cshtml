@model PayDebtViewModel
@{
    ViewData["Title"] = "DebtPayment";
}


<h1>Pay off @Model.DebtName Debt</h1>


                    

@if(Model.RemainingDebt !=0){
<form method="post" asp-action="DebtPayment" asp-controller="Debts">
    <div asp-validation-summary="All" class="text-warning">
    </div>



        <div class="col-12 mb-3 mb-lg-5">
            <div class="position-relative card table-nowrap table-card">
                <div class="card-header align-items-center">
                    <h4 class="mb-0"> Pay off Debt</h4>

    <table class="table table-bordered">

        <tr>
            <td>
			@Html.DisplayNameFor(x => x.RemainingDebt)
            </td>
            <td>
                @Model.RemainingDebt
            </td>
        </tr>

            <tbody>
        <tr>
           
            <td><label asp-for="Amount"></label></td>
            <td>
                <input asp-for="Amount" placeholder="Enter Amount" class="form-control" min="0.01" max="@Model.RemainingDebt" />
                <span class="text-danger" asp-validation-for="Amount"></span>
            </td>

        </tr>
        <tr>
        <input type="hidden" asp-for="UserDebtId" />
        <input type="hidden" asp-for="RemainingDebt"/>
        </tr>
        <div>
            <button type="submit" class="btn btn-outline-primary">Pay</button>
            </div>
        <div>
				<a asp-action="Index2" asp-controller="Debts" class="btn btn-outline-info">Back to Debts</a>
				<a asp-action="DebtTransactions" asp-controller="Transactions" asp-route-id="@Model.DebtId"class="btn btn-outline-secondary">Debt Transactions</a>
        </div>



            </table>
            </div>
            </div>
            </div>

</form>
}else {
    <p><span class="alert alert-success"> Your portion of the debt is already paid for.</span></p>
}
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var amountInput = document.querySelector('input[name="Amount"]');
            var maxAmount = parseFloat(amountInput.getAttribute('max'));

            amountInput.addEventListener('input', function () {
                var value = parseFloat(this.value);
                if (value < 0.01) {
                    this.value = 0.01;
                } else if (value > maxAmount) {
                    this.value = maxAmount;
                }
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
